查看所有的docker进程
docker ps

查看docker的所有客户端命令
docker

docker command --help

启动容器
docker run -it ubuntu /bin/bash
-i (interaction) 交互
-t (terminal)    启动一个终端
-d (detach)      后台启动容器
/bin/bash 默认的交互式shell

查看所有的docker容器
docker ps -a 

启动一个已经停止的容器
docker start <Container-id>

后台运行
docker run -itd --name <镜像名> ubuntu /bin/bash

进入到后台运行的docker镜像
docker exec -it <容器id/容器name> /bin/bash

导出容器
docker export <容器id> > filename

删除容器
docker rm -f <容器id>

查看所有镜像
docker images 

respository+tag唯一确定一个镜像

查找镜像
docker search httpd<镜像名称>

获取一个镜像
docker pull ubuntu:13.10 //docker pull respository:TAG

只要本地镜像仓库中有这个镜像那我们就可以运行这个镜像
docker run httpd

删除镜像
docker rmi hello-world

创建自己的镜像Dockerfile
构建镜像 docker build -t <镜像名>：TAG <dockerfile所在的位置>

docker容器连接
-P 表示容器内部端口随机映射到主机高端口
-p 映射主机和容器的端口

查看容器端口绑定情况
docker port <容器名字> <容器内部端口> //查看容器内部端口和外部端口的映射关系

创建自定义名字的容器
docker run -d -P --name <容器名称> <使用的镜像respository:TAG唯一确定> <进入docker容器需要执行的Command>


docker容器可以通过自定义的网络进行互联
创建网络
docker network create -d bridge <自定义的网络名>
查看你有哪些网络
docker network ls 





