简单动态字符串
SDS(Simple Dynamic String)

Redis的字符串是SDS，简单动态字符串，底层是一个数据结构，这个数据结构包含了未分配的空间大小，
字符串长度和保存字符串的字符数组。
free
len
char[]

优势：
1.STRLEN的复杂度只有O(1)。
2.在动态修改字符串的时候不用担心内存溢出。

为了防止字符串的内存重分配，SDS采用了内存预先分配策略。
即：
当SDS中的字符数组小于1MB的时候，预先分配同样大小的空间。比如SDS大小为13kb，那么SDS会除了分配13kb
的空间还会分配13kb作为预留的空间以防止内存重分配带来的性能消耗。

当SDS中字符串的大小大于1M的时候，此时预先分配1MB的内存。

惰性释放策略：
在缩短SDS的时候并不会立即释放SDS的空间，而是将释放的空间记录在free中在以后需要使用的时候不需要重新
分配内存。

SDS的数组存储的是二进制数据而不是字符数组。所以存入的数据可以支持空格分开。因为SDS使用len属性来判断
是否结束，而不是使用'\0'来判断。

###############################################
链表
head
tail
len
dup://复制当前结点的值
free
match

Redis的链表实现是一个双端无环链表。





















