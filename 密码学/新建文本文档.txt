#### Encoding（编码）

在信息传输过程中，无论是文字，图像，声音，视频还是程序，首先会将明文转化为比特序列，我们称之为编码。所谓加密，就是将表示明文的比特序列通过某种方式打乱，变成表示密文的比特序列。

简而言之，将人可以理解的信息（比如文字，图片，音视频），转换为机器可以理解的比特序列的过程就是编码。



#### XOR运算

异或运算，学过计算机组成原理的应该都清楚。（相异为1，相同为0）。XOR的性质可以保证对一个明文的比特序列使用长度相同的加密密钥，进行两次异或运算可以得到原始明文。

```java
假设明文对应的比特序列是：1 1 1 0 0 1 1 0
加密密钥对应的比特序列是：1 0 1 0 1 0 1 0
二者异或后的结果是加密后的密文 0 1 0 0 1 1 0 0
使用相同的密钥进行异或运算可以得到原始明文 1 1 1 0 0 1 1 0
```



#### 一次性密码本

将明文与一串随机的比特序列进行异或运算的方式就是一次性密码本。一次性密码本是无法破译的，虽然我们可以通过暴力的尝试加密密钥，但是得到的不一定是真正的明文。



#### 为什么一次性密码本并没有被使用？

一次性密码本最大的问题是密钥的配送，通信双方必须要保证密钥的一致性，同时还要防止密钥泄露。但是如果这二者都可以保证的话，直接就可以传输明文了，为啥还需要密钥呢。



#### 什么是DES？

Data Encryption Standard，是一种对称密钥。但是现在已经可以暴力破解了。

DES是一种将64位明文加密成64位比特密文的对称加密算法。它的密钥长度是56位。DES是以64比特的明文为一个单位进行加密的，所以DES也是一个**分组加密**算法。

DES会重复进行16轮以下操作：

1.将每组的输入数据分为左右两个部分，左边32位，右边32位。

2.将输入的右侧直接作为输出的右侧。

3.将输入的右侧发送给轮函数。

4.轮函数根据右侧数据和子密钥计算出一个随机的比特序列。

5.将得到的比特序列和左侧的数据做XOR运算。

然后将左右两侧的数据对调，重复以上操作。

具体的可搜索Feistel cipher。

DES的加密和解密都是通过Feistel 网络来实现，每一轮都使用了不同的子密钥。



#### AES

Advanced Encryption Standard

AES是一个标准，是由美国一个标准化机构，NIST所选拔的密码算法。AES标准的制定是由所有的参与者一起制定的。而且所有的密码算法都会公开，由全世界的密码学家共同评估。

AES标准最终选择了**Rijindael算法**。



**Rijindael算法**是一种分组密码算法，Rijindael也是由多个轮组成的，每一轮分为SubBytes,ShiftRows,MixColumns,AddRoundKey四个步骤。Rijindael的输入分组为128比特，16个字节。

1.SubBytes将16个字节，通过一张拥有256个值的替换表，转化为对应的值处理。

2.ShiftRows，以4字节为单位，每行进行左移，每一行的平移的字节数是不一样的。（循环左移）

3.MixColumns，将每一列的值进行比特运算转化为另一个值。

4.AddRoundKey，将MixColumns之后的每一列的值与轮密钥做XOR运算。



解密的时候，与上面的步骤是相反的。

#### 总结

通过简单的分析两种对称加密算法，我们可以发现，对称加密算法的思想就是XOR运算，从DES算法到AES算法的改变是在多重轮变化的时候增加了列变化和，AES算法由于行列变换的复杂性，比之前的DES算法能够胜任更多的场景。